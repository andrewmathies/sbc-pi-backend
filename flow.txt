user plugs in power and ethernet for a raspberry pi in the lab
NEP starts on pi
python script runs and collects version files
user connects the units and the pi via beans
user goes to website
user enters lab name in search bar, is taken to lab page
user finds the beanIDs of the beans he connected
user names units with given beanIDs
user selects version to update to for units

NEP requirements:

- loads on boot

on bean plug in:
    read bean id
    publish hello message on bean id channel
    subscribe to bean id channel

mqtt handler
    on update message
        if updating
            add the task to the queue
        else
            start ryans code with selected bean id and version file
            
when an update finishes
    publish done on bean ID topic

    if queue is not empty
        dequeue a unit and start the update



website requirements:

1st Page: search bar, search button
    on search button press:
        go to /lab/{x} where x is value from search bar
    TODO: autocomplete?

2nd Page: /lab/{labID}
    on load:
        call /units/{labID} to get list of units for this labID
        build table with list where each row has:
            name [textbox], bean id [text], version [dropdown], state [icon] where a state is one of (updating, success, failure)

    on dropdown change:
        send UPDATE request to /unit/{beanID}{version}

    on textbox save button press:
        send POST to /unit/{beanID}{name}

Backend go program BGP:

subscribe to /unit/+/

    on publish /unit/beanID/:
        create unit object
        put it in the dict

https endpoints:
    /units/{labID}
    GET:
        return list of all units with given labID. starting just return all units

    /unit/{beanID}
    UPDATE:
        update unit with beanID to specified version